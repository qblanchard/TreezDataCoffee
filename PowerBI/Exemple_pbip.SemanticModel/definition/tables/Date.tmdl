/// Date table used to show data as trends over time or compare to different time periods by similar groups, such as year, month, or quarter.
table Date
	lineageTag: 6b428134-83b8-48a6-a21c-a9f027ca779d
	dataCategory: Time

	/// Each day's date. Other columns in this table are used to group dates by year, month, quarter, week, and other groups.
	column Date
		isKey
		formatString: dd mmm yyyy
		lineageTag: fad74d68-02d7-4ce6-badb-5a19ce3c0566
		summarizeBy: none
		isNameInferred
		sourceColumn: [Date]

		annotation PBI_FormatHint = {"isCustom":true}

	/// Each year represented as the first date of that year. Can be used on visuals to have a continuous or categorical axis.
	column Yearly
		formatString: yyyy
		displayFolder: Parts as dates
		lineageTag: e76e9462-d60a-42d9-97ea-6e199ade9540
		summarizeBy: none
		isNameInferred
		sourceColumn: [Yearly]

		annotation PBI_FormatHint = {"isCustom":true}

	/// Each quarter represented as the first date of that quarter. Can be used on visuals to have a continuous or categorical axis.
	column Quarterly
		formatString: "Q starting" mmm yyyy
		displayFolder: Parts as dates
		lineageTag: 9bdd74c7-58b3-47f3-9ea7-bab94d0bd28b
		summarizeBy: none
		isNameInferred
		sourceColumn: [Quarterly]

		annotation PBI_FormatHint = {"isCustom":true}

	/// Each month represented as the first date of that month. Can be used on visuals to have a continuous or categorical axis.
	column Monthly
		formatString: mmm yyyy
		displayFolder: Parts as dates
		lineageTag: ddc088a5-2af2-42cc-83c6-ebcfa34043cb
		summarizeBy: none
		isNameInferred
		sourceColumn: [Monthly]

		annotation PBI_FormatHint = {"isCustom":true}

	/// Each week represented as the first date of that week, starting Sunday. Can be used on visuals to have a continuous or categorical axis.
	column Weekly
		formatString: "Week starting" ddd dd mmm yyyy
		displayFolder: Parts as dates
		lineageTag: e5d5bc6d-f3c5-416b-9225-4a50c4e63d79
		summarizeBy: none
		isNameInferred
		sourceColumn: [Weekly]

		annotation PBI_FormatHint = {"isCustom":true}

	/// Each month of the year represented as a number starting at 1 in correct sort order and for comparing weeks year over year
	column 'Month of Year'
		formatString: 0
		displayFolder: Parts as numbers
		lineageTag: 8d855113-9625-423c-90ca-bb28482d2978
		summarizeBy: none
		isNameInferred
		sourceColumn: [Month of Year]

		annotation SummarizationSetBy = User

	/// Each week of the year starting Sundays represented as a number starting at 1 in correct sort order and for comparing weeks year over year
	column 'Week of Year'
		formatString: 0
		displayFolder: Parts as numbers
		lineageTag: 182ab414-679c-4f26-94e5-dd8f29f858d9
		summarizeBy: none
		isNameInferred
		sourceColumn: [Week of Year]

		annotation SummarizationSetBy = User

	/// The 4-digit year
	column Year
		formatString: 0
		displayFolder: Parts as numbers
		lineageTag: d55f2516-bc08-44e8-ae2b-ce8b8bba397c
		summarizeBy: none
		isNameInferred
		sourceColumn: [Year]

		annotation SummarizationSetBy = User

	/// Each quarter of the year displayed as Q1, Q2, Q3, Q4.
	column Quarter
		displayFolder: Parts as text
		lineageTag: d7a0cdea-b562-4eb6-a925-f7efa1a28808
		summarizeBy: none
		isNameInferred
		sourceColumn: [Quarter]

	/// Each quarter with it's year displayed as quarter, year. Sort correctly with ORDER BY CALCULATE(MIN('Date'[Quarterly]))
	column 'Year Quarter'
		displayFolder: Parts as text
		lineageTag: 96829f83-6112-447f-a64e-0b70df40e37a
		summarizeBy: none
		isNameInferred
		sourceColumn: [Year Quarter]
		sortByColumn: Quarterly

	/// Each month of the year displayed as Jan, Feb, ..., Dec. Sort correctly with ORDER BY CALCULATE(MIN('Date'[Month of Year]))
	column Month
		displayFolder: Parts as text
		lineageTag: 284336fe-b1ac-430d-bae0-25cc5bbbab44
		summarizeBy: none
		isNameInferred
		sourceColumn: [Month]
		sortByColumn: 'Month of Year'

	/// Each month as text formatted as mmm, yyyy
	column 'Year Month'
		displayFolder: Parts as text
		lineageTag: 5b12b661-5e97-4a43-8ed0-f7a3f77582fd
		summarizeBy: none
		isNameInferred
		sourceColumn: [Year Month]
		sortByColumn: Monthly

	/// Each week starting Sunday displayed as start of week to end of week in format dd mmm 'yy - dd mmm 'yy. Sort correctly with ORDER BY CALCULATE(MIN('Date'[Weekly]))
	column Week
		displayFolder: Parts as text
		lineageTag: 3a607143-e1dc-4403-b8b3-9a7fc3993c29
		summarizeBy: none
		isNameInferred
		sourceColumn: [Week]
		sortByColumn: Weekly

	/// Number of years offset from today's year, future years positive and prior years negative.
	column 'Today Year Offset'
		formatString: 0
		displayFolder: Offset to today
		lineageTag: 082d3ddf-3dac-42d0-badc-11d5f8b292a4
		summarizeBy: none
		isNameInferred
		sourceColumn: [Today Year Offset]

		annotation SummarizationSetBy = User

	/// Number of quarters offset from today's quarter, future quarters positive and prior quarters negative.
	column 'Today Quarter Offset'
		formatString: 0
		displayFolder: Offset to today
		lineageTag: 4d50806a-2dad-4619-94c0-63604996a72d
		summarizeBy: none
		isNameInferred
		sourceColumn: [Today Quarter Offset]

		annotation SummarizationSetBy = User

	/// Number of months offset from today's month, future months positive and prior months negative.
	column 'Today Month Offset'
		formatString: 0
		displayFolder: Offset to today
		lineageTag: b4815697-4aa6-4f76-87f4-5c4a1ad2fa91
		summarizeBy: none
		isNameInferred
		sourceColumn: [Today Month Offset]

		annotation SummarizationSetBy = User

	/// Number of weeks starting Sunday offset from today's week, future weeks positive and prior weeks negative.
	column 'Today Week Offset'
		formatString: 0
		displayFolder: Offset to today
		lineageTag: e78266ed-6fb6-43cd-afd7-dd0898af8968
		summarizeBy: none
		isNameInferred
		sourceColumn: [Today Week Offset]

		annotation SummarizationSetBy = User

	/// Number of days offset from today, future days positive and prior days negative.
	column 'Today Day Offset'
		formatString: 0
		displayFolder: Offset to today
		lineageTag: 0c4f88a7-364a-4b4a-ae19-25caa0bc473a
		summarizeBy: none
		isNameInferred
		sourceColumn: [Today Day Offset]

		annotation SummarizationSetBy = User

	hierarchy 'Date Hierarchy'
		lineageTag: fadbe680-54d2-4ad1-ba37-649632f2d3ee

		level Year
			lineageTag: 114a7954-8f27-4ed9-9994-7b2540cbe06a
			column: Year

		level Quarter
			lineageTag: d977d337-4a1c-4380-815f-4cef87b8c4cb
			column: Quarter

		level Month
			lineageTag: 849d8dfc-61b0-4e75-a402-b355a4eb5a3b
			column: Month

		level Week
			lineageTag: a2104cb2-edac-443c-bd51-964c74d10382
			column: Week

		level Date
			lineageTag: 03ab82f2-9955-4373-88dc-87e518d7fbdd
			column: Date

	partition Date = calculated
		mode: import
		source = ```
				// Date Table by DataZoe, August 2021, datazoepowerbi.com
				// Here you can specify a start date, or the range of dates in your fact table.
				// If you have multiple fact tables, you can do MIN(MIN('Fact 1'[Date]),MIN('Fact 2'[Date])) etc.
				VAR _startdate =
				    DATE(2021,1,1)
				VAR _enddate =
					DATE(2026,1,1)-1
				RETURN
				    ADDCOLUMNS (
				        CALENDAR ( _startdate, _enddate ),
				        // Create DATE VERSIONS of the year, quarter, month, and week
				        // These will need to be formatted in the Column Format ribbon or in the Properties Pane in the Model view
				        // including custom formats, such as mmm yyyy for the month
				        "Yearly", DATE ( YEAR ( [Date] ), 1, 1 ),
				        "Quarterly",
				            DATE ( YEAR ( [Date] ), SWITCH (
				                MONTH ( [Date] ),
				                1, 1,
				                2, 1,
				                3, 1,
				                4, 4,
				                5, 4,
				                6, 4,
				                7, 7,
				                8, 7,
				                9, 7,
				                10, 10,
				                11, 10,
				                12, 10
				            ), 1 ),
				        "Monthly", DATE ( YEAR ( [Date] ), MONTH ( [Date] ), 1 ),
				        "Weekly",
				            [Date] - WEEKDAY ( [Date], 1 ) + 1,
				        // Month and Week OF YEAR to do accurate year over year week compares 
				        "Month of Year", MONTH ( [Date] ),
				        "Week of Year", WEEKNUM ( [Date] ),
				        // Create TEXT VERSIONS of the year, quarter, month, and week
				        // These will need to be sort by date versions above
				        // or the Month of Year to sort correctly
				        "Year", YEAR ( [Date] ),
				        "Quarter", CONCATENATE ( "Q", FORMAT ( QUARTER ( [Date] ), "0" ) ),
				        "Year Quarter", "Q" & FORMAT ( [Date], "q, yyyy" ),
				        "Month", FORMAT ( [Date], "MMM" ),
				        "Year Month", FORMAT ( [Date], "MMM, yyyy" ),
				        "Week",
				            FORMAT ( [Date] - WEEKDAY ( [Date], 1 ) + 1, "dd MMM 'yy" ) & " - "
				                & FORMAT ( ( [Date] - WEEKDAY ( [Date], 1 ) + 1 ) + 6, "dd MMM 'yy" ),
				        // Compared to today fields for when you want to always have say the current show by default
				        "Today Year Offset", DATEDIFF ( TODAY (), [Date], YEAR ),
				        "Today Quarter Offset", DATEDIFF ( TODAY (), [Date], QUARTER ),
				        "Today Month Offset", DATEDIFF ( TODAY (), [Date], MONTH ),
				        "Today Week Offset", DATEDIFF ( TODAY (), [Date], WEEK ),
				        "Today Day Offset", DATEDIFF ( TODAY (), [Date], DAY )
				    )
				```

	annotation PBI_Id = f9ac7d56b5e34adebee8b0ca93c6be23

